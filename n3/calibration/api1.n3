@prefix : <http://f4w.restdesc.org/demo#>.
@prefix http: <http://www.w3.org/2011/http#>.
@prefix tmpl: <http://purl.org/restdesc/http-template#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix out: <http://f4w.restdesc.org/demo/.well-known/genid/a899ad06-9545-4418-a1b1-de90fe204f36#>.

# API 0 (get all parts)
{
    log:Truth
}
=>
{
    _:request http:methodName "GET";
              tmpl:requestURI ("https://dummy-demo-repository.herokuapp.com/parts");
              http:resp [
                  http:body _:list
              ].
    _:list a :partList.
}.

# API “worker” start (request part ID)
{
    ?list a :partIDList.
}
=>
{
    _:request http:methodName "GET";
              tmpl:requestURI ("http://askTheWorker/" "start");
              http:headers ([ http:fieldName "Content-Type" ; http:fieldValue "application/json" ]); # tells us to which format we have to convert the body for the call
              http:body {[
                  :message "Please input the starting information. 'id' corresponds to the part ID.";
                  :partIDList ?list
              ].};
              http:resp [
#TODO n should not be universal!
                  http:body _:body
              ].
    _:body :contains {[
        :id ?id
    ]}.
    _:x a :part;
        :part_number ?id.
}.

# API 1 (request part information)
{
    ?x a :part;
       :part_number ?n.
}
=>
{
    _:request http:methodName "GET";
              tmpl:requestURI ("https://dummy-demo-repository.herokuapp.com/parts/" ?n);
              http:resp [
                  http:body _:body
              ].
#TODO universals ?min1 ?max1 ?min2 ?max2 ?p1 ?p2 ?p3 ?p4
    _:body :contains {[
        :tolerances ( ?t1 ?t2 );
        :machine_parameters ( ?p1 ?p2 ?p3 ?p4 )
    ]}.
    _:c a :calibration;
        :tolerances ( ?t1 ?t2 );
        :suggested_parameters ( ?p1 ?p2 ?p3 ?p4 );
        :part ?x.
}.










