
# http://docs.facts4.work/oauth_building_block.html

@prefix : <http://f4w.restdesc.org/demo#>.
@prefix auth: <http://f4w.restdesc.org/demo/authorization#>.
@prefix http: <http://www.w3.org/2011/http#>.
@prefix tmpl: <http://purl.org/restdesc/http-template#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix util: <http://f4w.restdesc.org/util#>.
@prefix rest: <http://f4w.restdesc.org/demo#>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.

{
    log:Truth
}
=>
{
    _:request http:methodName "GET";
              tmpl:requestURI ("http://askTheWorker/authorization");
              http:headers ([ http:fieldName "Content-Type" ; http:fieldValue "application/json" ]);
              http:resp [
                  http:body _:body
              ].
    _:body rest:contains { rest:json
        :username _:username;
        :password _:password
    }.
    _:user a auth:user;
           auth:username _:username;
           auth:password _:password.
}.


{
    ?user a auth:user;
          auth:username ?name;
          auth:password ?password.
}
=>
{
    _:request http:methodName "POST";
              tmpl:requestURI ("https://auth.facts4.work/oauth/token");
              http:headers ([ http:fieldName "Content-Type" ; http:fieldValue "application/json" ]);
              http:body { rest:json
                  :username ?name;
                  :password ?password;
                  :grant_type "password"
              };
              http:resp [
                  http:body _:body
              ].
    _:body rest:contains { rest:json
        :access_token  _:access_token;
        :refresh_token _:refresh_token;
        :created_at    _:created_at
    }.
    ?user auth:access_token  _:access_token;
          auth:refresh_token [ auth:token _:refresh_token; prov:atTime _:created_at ].
}.


{
    ?user a auth:user;
          auth:refresh_token ?refresh_token.
    ?refresh_token auth:token ?token.
}
=>
{
    _:request http:methodName "POST";
              tmpl:requestURI ("https://auth.facts4.work/oauth/token");
              http:headers ([ http:fieldName "Content-Type" ; http:fieldValue "application/json" ]);
              http:body { rest:json
                  :refresh_token ?token;
                  :grant_type "refresh_token"
              };
              http:resp [
                  http:body _:body
              ].
    _:body rest:contains { rest:json
        :refresh_token _:refresh_token;
        :created_at    _:created_at
    }.
    ?user auth:refresh_token [ auth:token _:refresh_token; prov:atTime  _:created_at ].
}.

# TODO: insufficient if authentication over multiple APIs is required
{
    ?user a auth:user;
          auth:refresh_token ?token.
    ?token prov:atTime ?refresh_time.
    ?error a rest:error;
           http:statusCodeNumber 401;
           prov:atTime ?error_time.
    ?refresh e:whenGround { ?error_time math:lessThan ?refresh_time. }.
}
=>
{
   ?user auth:authenticated true.
}.

{
    ?user a auth:user.
    _:x e:findall(?x { ?error a rest:error; http:statusCodeNumber 401} ()).
}
=>
{
   ?user auth:authenticated true.
}.
