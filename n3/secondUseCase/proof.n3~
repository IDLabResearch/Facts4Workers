#Processed by Id: euler.yap 8191 2015-06-19 22:23:14Z josd
#eye api1.n3 --query goal1.n3

PREFIX : <http://f4w.restdesc.org/demo#>
PREFIX http: <http://www.w3.org/2011/http#>
PREFIX tmpl: <http://multimedialab.elis.ugent.be/organon/ontologies/tmpl#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX string: <http://www.w3.org/2000/10/swap/string#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    :p :reported _:sk17.
  }].

<#lemma1> a r:Inference; r:gives {:p :reported _:sk17}; r:evidence (
  <#lemma2>
  <#lemma3>
  <#lemma4>);
  r:rule <#lemma5>.

<#lemma2> a r:Extraction; r:gives {:p a :problem};
  r:because [ a r:Parsing; r:source <file:///home/darndt/f4w/easter-demo/n3/secondUseCase/api1.n3>].

<#lemma3> a r:Inference; r:gives {:p :status "open"}; r:evidence (
  <#lemma2>
  [ a r:Fact; r:gives {((<file:///home/darndt/f4w/easter-demo/n3/secondUseCase/api1.n3>) 1) e:findall (:p {:p :status "closed"} ())}]);
  r:rule <#lemma6>.

<#lemma4> a r:Inference; r:gives {_:sk19 http:methodName "POST".
  _:sk19 tmpl:requestURI ("http://thermolympic-demo.herokuapp.com/reports").
  _:sk19 http:body {_:sk20 :defect_id _:sk17.
    _:sk20 :operator _:sk21.
    _:sk20 :status "open"}.
  _:sk19 http:response _:sk22.
  _:sk22 http:body _:sk23.
  :p :reported _:sk17}; r:evidence (
  <#lemma2>
  <#lemma3>
  <#lemma7>);
  r:rule <#lemma8>.

<#lemma5> a r:Extraction; r:gives {{?x0 a :problem.
  ?x0 :status "open".
  ?x0 :reported ?x1} => {?x0 :reported ?x1}};
  r:because [ a r:Parsing; r:source <file:///home/darndt/f4w/easter-demo/n3/secondUseCase/goal1.n3>].

<#lemma6> a r:Extraction; r:gives {{?x0 a :problem.
  ?x1 e:findall (?x0 {?x0 :status "closed"} ())} => {?x0 :status "open"}};
  r:because [ a r:Parsing; r:source <file:///home/darndt/f4w/easter-demo/n3/secondUseCase/api1.n3>].

<#lemma7> a r:Inference; r:gives {_:sk10 http:methodName "GET".
  _:sk10 tmpl:requestURI ("http://askTheWorker/" "specifyProblem").
  _:sk10 http:body {_:sk11 :message "Please specify the problem'. 'id' corresponds to the defect id on the list. If the list does not contain the present defect, use a new id. Please also provide your name under 'name'".
    _:sk11 :defectList _:sk9}.
  _:sk10 http:response _:sk12.
  _:sk12 http:body _:sk13.
  _:sk13 :contains {_:sk14 :defect_id _:sk15.
    _:sk14 :name _:sk16}.
  :p :defect _:sk17.
  :p :operatorName _:sk18}; r:evidence (
  <#lemma2>
  <#lemma9>
  <#lemma10>);
  r:rule <#lemma11>.

<#lemma8> a r:Extraction; r:gives {{?x0 a :problem.
  ?x0 :status "open".
  ?x0 :defect ?x1} => {_:x2 http:methodName "POST".
  _:x2 tmpl:requestURI ("http://thermolympic-demo.herokuapp.com/reports").
  _:x2 http:body {_:x3 :defect_id ?x1.
    _:x3 :operator _:x4.
    _:x3 :status "open"}.
  _:x2 http:response _:x5.
  _:x5 http:body _:x6.
  ?x0 :reported ?x1}};
  r:because [ a r:Parsing; r:source <file:///home/darndt/f4w/easter-demo/n3/secondUseCase/api1.n3>].

<#lemma9> a r:Inference; r:gives {_:sk0 http:methodName "GET".
  _:sk0 tmpl:requestURI ("http://askTheWorker/" "problemPartId").
  _:sk0 http:body {:sk1 :message "Please enter the id of the part where the problem occurred'. 'id' corresponds to the part ID."}.
  _:sk0 http:response _:sk2.
  _:sk2 http:body _:sk3.
  _:sk3 :contains {_:sk4 :part_id _:sk5}.
  :p :onPart _:sk6.
  _:sk6 a :partId}; r:evidence (
  <#lemma2>);
  r:rule <#lemma12>.

<#lemma10> a r:Inference; r:gives {_:sk7 http:methodName "GET".
  _:sk7 tmpl:requestURI ("http://thermolympic-demo.herokuapp.com/defects?part_id=" _:sk6).
  _:sk7 http:resp _:sk8.
  _:sk8 http:body _:sk9.
  _:sk6 :defects _:sk9}; r:evidence (
  <#lemma9>);
  r:rule <#lemma13>.

<#lemma11> a r:Extraction; r:gives {{?x0 a :problem.
  ?x0 :onPart ?x1.
  ?x1 :defects ?x2} => {_:x3 http:methodName "GET".
  _:x3 tmpl:requestURI ("http://askTheWorker/" "specifyProblem").
  _:x3 http:body {:x4 :message "Please specify the problem'. 'id' corresponds to the defect id on the list. If the list does not contain the present defect, use a new id. Please also provide your name under 'name'".
    _:x4 :defectList ?x2}.
  _:x3 http:response _:x5.
  _:x5 http:body _:x6.
  _:x6 :contains {_:x7 :defect_id _:x8.
    _:x7 :name _:x9}.
  ?x0 :defect _:x10.
  ?x0 :operatorName _:x11}};
  r:because [ a r:Parsing; r:source <file:///home/darndt/f4w/easter-demo/n3/secondUseCase/api1.n3>].

<#lemma12> a r:Extraction; r:gives {{?x0 a :problem} => {_:x1 http:methodName "GET".
  _:x1 tmpl:requestURI ("http://askTheWorker/" "problemPartId").
  _:x1 http:body {_:x2 :message "Please enter the id of the part where the problem occurred'. 'id' corresponds to the part ID."}.
  _:x1 http:response _:x3.
  _:x3 http:body _:x4.
  _:x4 :contains {_:x5 :part_id _:x6}.
  ?x0 :onPart _:x7.
  _:x7 a :partId}};
  r:because [ a r:Parsing; r:source <file:///home/darndt/f4w/easter-demo/n3/secondUseCase/api1.n3>].

<#lemma13> a r:Extraction; r:gives {{?x0 a :partId} => {_:x1 http:methodName "GET".
  _:x1 tmpl:requestURI ("http://thermolympic-demo.herokuapp.com/defects?part_id=" ?x0).
  _:x1 http:resp _:x2.
  _:x2 http:body _:x3.
  ?x0 :defects _:x3}};
  r:because [ a r:Parsing; r:source <file:///home/darndt/f4w/easter-demo/n3/secondUseCase/api1.n3>].

#ENDS 0.041 [sec] IO=10/1 TC=6 TP=18 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

